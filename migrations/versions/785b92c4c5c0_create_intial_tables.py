"""create intial tables

Revision ID: 785b92c4c5c0
Revises: 
Create Date: 2025-06-22 17:22:36.477738

"""
from typing import Sequence, Union  # noqa: F401, UP035

import sqlalchemy as sa
import sqlmodel  # noqa: F401
from alembic import op
from sqlalchemy.dialects import postgresql
from sqlmodel import AutoString  
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '785b92c4c5c0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('consumers',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=320), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('active_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_consumers_email'), 'consumers', ['email'], unique=True)
    op.create_index(op.f('ix_consumers_id'), 'consumers', ['id'], unique=False)
    op.create_table('providers',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=320), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('access', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('verification_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('verification_token_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('authentication_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('authentication_token_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reset_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reset_token_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('authenticated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_providers_email'), 'providers', ['email'], unique=True)
    op.create_index(op.f('ix_providers_id'), 'providers', ['id'], unique=False)
    op.create_table('forms',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_forms_id'), 'forms', ['id'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('consumer_id', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='sessionstatus'), nullable=True),
    sa.Column('transcription', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('initiated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('concluded_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('feedback', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['consumer_id'], ['consumers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sessions_id'), 'sessions', ['id'], unique=False)
    op.create_table('form_responses',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('form_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('submitted_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['form_id'], ['forms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_form_responses_id'), 'form_responses', ['id'], unique=False)
    op.create_table('form_sections',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('form_id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['form_id'], ['forms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_form_sections_id'), 'form_sections', ['id'], unique=False)
    op.create_table('form_questions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('section_id', sa.Uuid(), nullable=False),
    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('field_type', sa.Enum('TEXT', 'NUMBER', 'BOOLEAN', 'DATETIME', 'SINGLE_CHOICE', 'MULTIPLE_CHOICE', name='formfieldtypes'), nullable=False),
    sa.Column('required', sa.Boolean(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('options', postgresql.ARRAY(sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['section_id'], ['form_sections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_form_questions_id'), 'form_questions', ['id'], unique=False)
    op.create_table('form_section_responses',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('response_id', sa.Uuid(), nullable=False),
    sa.Column('section_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['response_id'], ['form_responses.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['form_sections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_form_section_responses_id'), 'form_section_responses', ['id'], unique=False)
    op.create_table('form_question_responses',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('section_response_id', sa.Uuid(), nullable=False),
    sa.Column('question_id', sa.Uuid(), nullable=False),
    sa.Column('answer', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('submitted_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['form_questions.id'], ),
    sa.ForeignKeyConstraint(['section_response_id'], ['form_section_responses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_form_question_responses_id'), 'form_question_responses', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_form_question_responses_id'), table_name='form_question_responses')
    op.drop_table('form_question_responses')
    op.drop_index(op.f('ix_form_section_responses_id'), table_name='form_section_responses')
    op.drop_table('form_section_responses')
    op.drop_index(op.f('ix_form_questions_id'), table_name='form_questions')
    op.drop_table('form_questions')
    op.drop_index(op.f('ix_form_sections_id'), table_name='form_sections')
    op.drop_table('form_sections')
    op.drop_index(op.f('ix_form_responses_id'), table_name='form_responses')
    op.drop_table('form_responses')
    op.drop_index(op.f('ix_sessions_id'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_index(op.f('ix_forms_id'), table_name='forms')
    op.drop_table('forms')
    op.drop_index(op.f('ix_providers_id'), table_name='providers')
    op.drop_index(op.f('ix_providers_email'), table_name='providers')
    op.drop_table('providers')
    op.drop_index(op.f('ix_consumers_id'), table_name='consumers')
    op.drop_index(op.f('ix_consumers_email'), table_name='consumers')
    op.drop_table('consumers')
    # ### end Alembic commands ###
